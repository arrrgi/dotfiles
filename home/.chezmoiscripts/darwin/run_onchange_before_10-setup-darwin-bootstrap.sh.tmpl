{{- if .target.darwin -}}
#!/usr/bin/env bash

# Check for XCode Command Line tools. If not present, install them, wait for the
# installation PID to finish, check that the installation was successful, and then
# accept the license agreement.
if xcode-select -p &> /dev/null; then
    echo "Info: XCode Command Line tools are already installed."
else
    # Install XCode Command Line Tools
    echo "Info: Installing XCode Command Line tools..."
    xcode-select --install &> /dev/null

    # Wait for the installation to finish and check that it was successful
    if installer_pid=$(ps aux | grep "[I]nstall Command Line Developer Tools.app" | awk '{print $2}'); then
        echo "Info: Waiting for XCode Command Line tools to finish installing..."
        wait $installer_pid && xcode-select -p &> /dev/null \
            && echo "Info: XCode Command Line tools installation successful." \
            || echo "Error: XCode Command Line tools installation failed. Exiting." \
            && exit 1
    else
        echo "Error: Unable to find XCode Command Line tools installer PID. Exiting."
        exit 1
    fi

    # Check that the installation was successful and accept the license agreement
    if xcode-select -p &> /dev/null; then
        echo "Info: Accepting XCode Command Line tools license agreement."
        sudo xcodebuild -license accept &> /dev/null
    else
        echo "Error: XCode Command Line tools installation failed. Exiting."
        exit 1
    fi
fi

# Check for Homebrew. If not present, install it and load the Homebrew shellenv depending on
# the architecture of the machine.
if ! command -v brew &> /dev/null; then
    echo "Info: Homebrew is not installed. Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
    echo "Info: Homebrew is already installed."
    {{ if eq .chezmoi.arch "arm64" -}}
    eval $(/opt/homebrew/bin/brew shellenv)
    {{- else }}
    eval $(/usr/local/bin/brew shellenv)
    {{- end }}
fi
{{- end -}}
